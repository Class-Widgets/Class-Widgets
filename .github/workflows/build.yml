name: 构建

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
 
jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64 ]
        os: [ ubuntu-20.04, windows-latest, macos-13 ]
        exclude:
          - os: ubuntu-20.04
            arch: x86
          - os: macos-13
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v4
      # - name: Setup upx (win32)
      #   if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x86' }}
      #   run: |
      #     curl -o upx.zip -L https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win32.zip
      #     tar -xvzf upx.zip
      #     ren upx-4.2.4-win32 upx
      # - name: Setup upx (win64)
      #   if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x64' }}
      #   run: |
      #     curl -o upx.zip -L https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip
      #     tar -xvzf upx.zip
      #     ren upx-4.2.4-win64 upx
      - name: Run Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          uv venv
          .venv\Scripts\activate
          uv pip install -r requirements.txt
          uv pip install pyinstaller
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data view:view `
            --add-data LICENSE:. `
            --add-data plugins:plugins `
            --hidden-import PyQt5.QtWebEngine

      - name: Run Linux build
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.ico \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine

      - name: Run macOS build
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.icns \
            -n "Class Widgets" \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine
          mkdir bundle
          mv dist/Class\ Widgets.app bundle/Class\ Widgets.app


      # # 新增步骤：向配置文件添加提交 SHA
      # - name: Add commit SHA to config files
      #   shell: bash
      #   run: |
      #     mkdir -p ./dist/ClassWidgets/config
      #     for file in ./dist/ClassWidgets/config/temp_config.json ./dist/ClassWidgets/config/default_config.json; do
      #         if [ -f "$file" ]; then
      #         python3 -c "import json, sys; data=json.load(open('$file')); data.setdefault('Other', {}).update({'build_id': '${{ github.sha }}'}); json.dump(data, open('$file', 'w'), indent=2)"
      #       else
      #         python3 -c "import json; data={'Other': {'build_id': '${{ github.sha }}'}}; json.dump(data, open('$file', 'w'), indent=2)"
      #       fi
      #     done

      # 新增步骤：向配置文件添加提交 SHA 和开发版本标识
      - name: Add commit SHA and dev version flag to config files
        shell: bash
        run: |
          mkdir -p ./dist/ClassWidgets/config
          for file in ./dist/ClassWidgets/config/temp_config.json ./dist/ClassWidgets/config/default_config.json; do
            if [ -f "$file" ]; then
              python3 -c "import json; data=json.load(open('$file')); data.setdefault('Other', {}).update({'build_id': '${{ github.sha }}', 'is_dev_version': True}); json.dump(data, open('$file', 'w'), indent=2)"
            else
              python3 -c "import json; data={'Other': {'build_id': '${{ github.sha }}', 'is_dev_version': True}}; json.dump(data, open('$file', 'w'), indent=2)"
            fi
          done

      - name: 删除临时配置文件
        run: |
          # 统一使用 bash shell 并检查文件存在性
          if [ -f "./dist/ClassWidgets/config/temp_config.json" ]; then
            rm -v "./dist/ClassWidgets/config/temp_config.json"
          fi
        shell: bash  # 强制使用 Git Bash
        

      - name: Upload unsigned application
        if: ${{ ( matrix.os != 'windows-latest' && github.event_name != 'pull_request' ) || github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./dist
      - name: Upload unsigned single file
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        id: upload-unsigned-artifact
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }} (Unsigned single)
          path: ./dist/ClassWidgets/ClassWidgets.exe
      - name: Upload macOS Bundle
        if: ${{ matrix.os == 'macos-13' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: macos-13-bundle
          path: ./bundle
      - name: Sign application (Test)
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'test-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './dist/ClassWidgets'
      - name: Sign application (Release)
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'release-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './dist/ClassWidgets'
      - name: Upload signed application
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-latest-${{ matrix.arch }}
          path: ./dist

  debian:
    runs-on: ubuntu-latest
    container:
      image: debian:10
    steps:
      - name: Install sudo and set Python 3 as default
        run: |
          apt-get update
          apt-get install -y sudo

          apt-get install -y python3
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          echo $PATH

      - name: Install dependencies
        shell: bash
        run: |
          apt-get update
          apt-get install -y wget binutils libglib2.0-dev libfreetype6 libxfixes3 libgssapi-krb5-2 libdbus-1-3 libxext6 libfontconfig1 libxrandr2 libnspr4 libx11-xcb1 libxrender1 libasound2 libxkbcommon0 libxtst6 libnss3 libxdamage1 libxcomposite1 libcups2 libwayland-client0 libwayland-cursor0 libcairo2 libcairo-gobject2 libpango-1.0-0 libgtk-3-0 libgdk-pixbuf2.0-0 libxkbcommon-x11-0 libwayland-egl1 libxcb-xinerama0 libxcb-render-util0 libxcb-randr0 libxcb-image0 libxcb-sync1 libxcb-keysyms1 libxcb-shape0 libxcb-xfixes0 libxcb-icccm4 libxcb-glx0 git
          wget http://ftp.debian.org/debian/pool/main/x/xcb-util/libxcb-util1_0.4.0-1+b1_amd64.deb
          dpkg -i libxcb-util1_0.4.0-1+b1_amd64.deb
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup uv & python
        uses: astral-sh/setup-uv@v4
        with:
          python-version: 3.8.10
      - name: Run Linux (Debian 10) build
        shell: bash
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine


      # # 新增步骤：向配置文件添加提交 SHA（Debian）
      # - name: Add commit SHA to config files
      #   shell: bash
      #   run: |
      #     python -m venv .venv
      #     source .venv/bin/activate
      #     mkdir -p ./dist/ClassWidgets/config
      #     for file in ./dist/ClassWidgets/config/temp_config.json ./dist/ClassWidgets/config/default_config.json; do
      #       if [ -f "$file" ]; then
      #         python -c "import json, sys; data=json.load(open('$file')); data.setdefault('Other', {}).update({'build_id': '${{ github.sha }}'}); json.dump(data, open('$file', 'w'), indent=2)"
      #       else
      #         python -c "import json; data={'Other': {'build_id': '${{ github.sha }}'}}; json.dump(data, open('$file', 'w'), indent=2)"
      #       fi
      #     done

      # 新增步骤：向配置文件添加提交 SHA 和开发版本标识（Debian）
      - name: Add commit SHA and dev version flag to config files
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          mkdir -p ./dist/ClassWidgets/config
          for file in ./dist/ClassWidgets/config/temp_config.json ./dist/ClassWidgets/config/default_config.json; do
            if [ -f "$file" ]; then
              python -c "import json; data=json.load(open('$file')); data.setdefault('Other', {}).update({'build_id': '${{ github.sha }}', 'is_dev_version': True}); json.dump(data, open('$file', 'w'), indent=2)"
            else
              python -c "import json; data={'Other': {'build_id': '${{ github.sha }}', 'is_dev_version': True}}; json.dump(data, open('$file', 'w'), indent=2)"
            fi
          done

      - name: 删除临时配置文件
        run: |
          # 统一使用 bash shell 并检查文件存在性
          if [ -f "./dist/ClassWidgets/config/temp_config.json" ]; then
            rm -v "./dist/ClassWidgets/config/temp_config.json"
          fi
        shell: bash  # 强制使用 Git Bash
        

      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: debian10-x64
          path: ./dist
