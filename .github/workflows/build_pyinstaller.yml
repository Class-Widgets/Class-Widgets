name: 临时构建(pyinstaller)

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
 
jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64, arm64 ]
        os: [ windows-latest ]
        exclude:
          - os: ubuntu-20.04
            arch: x86
          - os: ubuntu-20.04
            arch: arm64
          - os: macos-13
            arch: x86
          - os: macos-13
            arch: arm64
          - os: windows-latest
            arch: arm64
          - os: macos-14
            arch: x86
          - os: macos-14
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v4
      - name: Init zip folder
        run: mkdir zip
      - name: Run Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          curl -o zip.exe -L http://www.stahlworks.com/dev/zip.exe
          uv venv
          .venv\Scripts\activate
          uv pip install -r requirements.txt
          uv pip install pyinstaller
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data view:view `
            --add-data LICENSE:. `
            --add-data plugins:plugins `
            --hidden-import darkdetect
          ./zip -r -q "zip/ClassWidgets-Windows-${{ matrix.arch }} (Unsigned).zip" dist/ClassWidgets/*

      - name: Upload unsigned application
        if: ${{ ( matrix.os != 'windows-latest' && github.event_name != 'pull_request' ) || github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./zip
      - name: Upload unsigned single file
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        id: upload-unsigned-artifact
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }} (Unsigned single)
          path: ./dist/ClassWidgets/ClassWidgets.exe
      - name: Sign application (Test)
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'test-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './dist/ClassWidgets'
      - name: Sign application (Release)
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'release-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './dist/ClassWidgets'
      - name: Recompress
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        run: |
          del "zip/ClassWidgets-Windows-${{ matrix.arch }} (Unsigned).zip"
          ./zip -r -q zip/ClassWidgets-Windows-${{ matrix.arch }}.zip dist/ClassWidgets/*
      - name: Upload signed application
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-latest-${{ matrix.arch }}
          path: ./zip

      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: debian10-x64
          path: ./zip
