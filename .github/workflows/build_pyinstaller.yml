name: 临时构建(pyinstaller)

on:
  pull_request_target:
    types: [opened, synchronize]
    paths-ignore:      
    - '**/*.md'
    - '**/*.txt'
    - '.gitignore'
    - '.gitattributes'
    - '.github/ISSUE_TEMPLATE/**'
    - '.github/DISCUSSION_TEMPLATE/**'
    - '.github/PULL_REQUEST_TEMPLATE*'
  workflow_dispatch:
    inputs:
      architecture:
        description: '构建架构'
        required: true
        default: 'all'
        type: choice
        options:
          - x86
          - x64
          - all

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    name: Python Syntax Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout PR (merge ref)
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install linters and tools
        run: |
          pip install ruff pylint pyright

      - name: Detect changed Python files
        id: changed
        run: |
          echo "🔍 获取改动 Python 文件..."
          changed=$(git diff --name-only HEAD^ HEAD | grep '\.py$' | xargs -I {} sh -c 'test -f {} && echo {}' || true)
          echo "$changed" > changed_files.txt
          echo "changed_files=$(echo "$changed" | jq -R -s -c 'split("\n") | map(select(. != ""))')" >> $GITHUB_OUTPUT

      - name: Skip if no Python files changed
        id: skip_lint_check
        if: steps.changed.outputs.changed_files == ''
        run: |
          echo "✅ 没有 Python 文件改动，跳过检查"
          echo "::set-output name=should_skip_lint::true"

      - name: Run Ruff and annotate
        if: steps.skip_lint_check.outputs.should_skip_lint != 'true'
        uses: chartboost/ruff-action@v1
        with:
          args: check ${{ steps.changed.outputs.changed_files }}

      - name: Run Pyright and annotate
        if: steps.skip_lint_check.outputs.should_skip_lint != 'true'
        uses: jakebailey/pyright-action@v2
        with:
          pylance-version: latest-release

      - name: Run PyLint and comment summary
        if: steps.skip_lint_check.outputs.should_skip_lint != 'true'
        continue-on-error: true
        run: |
          if [ -s changed_files.txt ]; then
            pylint $(cat changed_files.txt) > pylint_output.txt || true
          else
            echo "" > pylint_output.txt
          fi

      - name: Post PyLint comment to PR
        if: steps.skip_lint_check.outputs.should_skip_lint != 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **🧪 PyLint 检查结果简报**
            <details><summary>查看详情</summary>

            ```
            ${{ steps.changed.outputs.changed_files }}
            ```
            ```text
            $(cat pylint_output.txt)
            ```

            </details>

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            os: windows-latest
          - arch: x64
            os: windows-latest
    env:
      BUILD_TRIGGERED: ${{ (github.event_name == 'pull_request' || github.event_name == 'pull_request_target' || github.event_name == 'workflow_dispatch') && 'true' || 'false' }}
    runs-on: ${{ matrix.os }}
    if: |
      github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request_target'
    steps:
      - name: Skip build for ${{ matrix.arch }}
        id: skip_check
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.architecture != 'all' && github.event.inputs.architecture != matrix.arch
        run: |
          echo "Skip build ${{ matrix.arch }}"
          echo "::set-output name=should_skip::true"

      - name: Checkout repository
        if: env.BUILD_TRIGGERED == 'true' && (github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch) && steps.skip_check.outputs.should_skip != 'true'
        uses: actions/checkout@v4.2.2

      - name: Setup Python
        if: steps.skip_check.outputs.should_skip != 'true'
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}

      - name: Setup uv
        if: steps.skip_check.outputs.should_skip != 'true'
        uses: astral-sh/setup-uv@v4

      - name: Cache Python dependencies
        if: steps.skip_check.outputs.should_skip != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-${{ matrix.arch }}-uv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-uv-

      - name: Create venv and install dependencies
        if: steps.skip_check.outputs.should_skip != 'true'
        shell: pwsh
        run: |
          pwd
          uv venv .venv
          $env:UV_VENV_PATH = ".venv"
          uv pip install -r requirements.txt
          uv pip install pyinstaller

      - name: Prepare output directory
        if: steps.skip_check.outputs.should_skip != 'true'
        run: |
          if (Test-Path zip) { Remove-Item zip -Recurse -Force }
          mkdir zip

      - name: Set Build Info
        if: steps.skip_check.outputs.should_skip != 'true'
        shell: bash
        env:
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
          PR_BRANCH: ${{ github.event.pull_request.head.repo.owner.login || github.repository_owner }}:${{ github.event.pull_request.head.ref || github.ref_name }}
        run: |
          build_time=$(date -u -d "+8 hours" +"%Y-%m-%d %H:%M")
          build_commit="${GITHUB_SHA:0:7}"
          build_branch="${GITHUB_REF_NAME}"
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" || "${GITHUB_EVENT_NAME}" == "pull_request_target" ]]; then
            build_branch="$PR_BRANCH"
          fi
          build_runid="${GITHUB_RUN_ID}"
          build_type="pyinstaller"
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" || "${GITHUB_EVENT_NAME}" == "pull_request_target" ]]; then
            build_type="pyinstaller (Debug for PR-#${PR_NUMBER})"
          elif [[ "${GITHUB_EVENT_NAME}" == "push" && ! "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
            build_type="pyinstaller(Debug for Test)"
          fi
          config_path="${GITHUB_WORKSPACE}/config/default_config.json"
          ls -l "$config_path"
          config_text=$(cat "$config_path")
          config_text="${config_text//__BUILD_TIME__/$build_time}"
          config_text="${config_text//__BUILD_COMMIT__/$build_commit}"
          config_text="${config_text//__BUILD_BRANCH__/$build_branch}"
          config_text="${config_text//__BUILD_RUNID__/$build_runid}"
          config_text="${config_text//__BUILD_TYPE__/$build_type}"
          printf "%s" "$config_text" > "$config_path"
          echo "📜 写入的构建信息："
          echo "⏰ BUILD_TIME(UTC+8):   $build_time"
          echo "🔗 COMMIT_HASH: $build_commit"
          echo "🌿 BRANCH:      $build_branch"
          echo "🆔 RUN_ID:      $build_runid"
          echo "🧪 BUILD_TYPE:  $build_type"

      - name: Run Windows build & package
        if: steps.skip_check.outputs.should_skip != 'true'
        shell: pwsh
        run: |
          curl -o zip.exe -L http://www.stahlworks.com/dev/zip.exe
          .\.venv\Scripts\activate
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data view:view `
            --add-data LICENSE:. `
            --add-data plugins:plugins `
            --hidden-import darkdetect
          ./zip -r -q zip/ClassWidgets_${{ github.run_id }}-${{ matrix.arch }}.zip dist/ClassWidgets/*

      - name: Upload build artifact
        if: steps.skip_check.outputs.should_skip != 'true'
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }}_debug_#${{ github.run_number }}
          path: zip
