name: 临时构建(pyinstaller)

on:
  pull_request:
  workflow_dispatch:
    inputs:
      architecture:
        description: '构建架构'
        required: true
        default: 'all'
        type: choice
        options:
          - x86
          - x64
          - all

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            os: windows-latest
          - arch: x64
            os: windows-latest
    runs-on: ${{ matrix.os }}
    if: |
      github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Skip build for ${{ matrix.arch }}
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.architecture != 'all' && github.event.inputs.architecture != matrix.arch
        run: echo "Skip build ${{ matrix.arch }}"

      - name: Checkout repository
        if: github.event_name == 'pull_request' || github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch
        uses: actions/checkout@v4.2.2

      - name: Setup Python
        if: github.event_name == 'pull_request' || github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}

      - name: Setup uv
        if: github.event_name == 'pull_request' || github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch
        uses: astral-sh/setup-uv@v4

      - name: Prepare output directory
        if: github.event_name == 'pull_request' || github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch
        run: |
          if (Test-Path zip) { Remove-Item zip -Recurse -Force }
          mkdir zip

      - name: Run Windows build & package
        if: github.event_name == 'pull_request' || github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch
        run: |
          curl -o zip.exe -L http://www.stahlworks.com/dev/zip.exe
          uv venv
          .venv\Scripts\activate
          uv pip install -r requirements.txt pyinstaller
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data view:view `
            --add-data LICENSE:. `
            --add-data plugins:plugins `
            --hidden-import darkdetect
          ./zip -r -q zip/ClassWidgets_${{ github.run_id }}-${{ matrix.arch }}.zip dist/ClassWidgets/*

      - name: Upload build artifact
        if: github.event_name == 'pull_request' || github.event.inputs.architecture == 'all' || github.event.inputs.architecture == matrix.arch
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }}_debug_#${{ github.run_number }}
          path: zip
