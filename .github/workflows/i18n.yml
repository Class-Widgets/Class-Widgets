name: I18n Update

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.ui'
      - '**/*.py'
      - 'i18n/**/*.ts'
      - 'ui/**/i18n/**/*.ts'
  workflow_dispatch:
    inputs:
      update_all_ts:
        description: '更新全部.ts文件'
        required: true
        default: true
        type: boolean
      compile_to_qm:
        description: '是否编译为.qm文件'
        required: true
        default: true
        type: boolean

concurrency:
  group: i18n-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  detect-changes:
    name: 检测文件变更
    runs-on: ubuntu-latest
    outputs:
      has_ui_changes: ${{ steps.detect.outputs.has_ui_changes }}
      has_py_changes: ${{ steps.detect.outputs.has_py_changes }}
      has_ts_changes: ${{ steps.detect.outputs.has_ts_changes }}
      should_update_all: ${{ steps.detect.outputs.should_update_all }}
      should_compile: ${{ steps.detect.outputs.should_compile }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 2

      - name: Detect file changes
        id: detect
        shell: bash
        run: |
          has_ui_changes="false"
          has_py_changes="false"
          has_ts_changes="false"
          should_update_all="false"
          should_compile="false"

          if [[ "${{ github.event_name }}" == "push" ]]; then
            changed_files=$(git diff --name-only HEAD~1 HEAD)
            if echo "$changed_files" | grep -q '\.ui$'; then
              has_ui_changes="true"
              echo "[DEBUG] .ui Changes Detected"
            fi
            if echo "$changed_files" | grep -q '\.py$'; then
              has_py_changes="true"
              echo "[DEBUG] .py Changes Detected"
            fi
            if echo "$changed_files" | grep -q '\.ts$'; then
              has_ts_changes="true"
              echo "[DEBUG] .ts Changes Detected"
            fi
            if [[ "$has_ui_changes" == "true" || "$has_py_changes" == "true" || "$has_ts_changes" == "true" ]]; then
              should_compile="true"
            fi
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            should_update_all="${{ github.event.inputs.update_all_ts }}"
            should_compile="${{ github.event.inputs.compile_to_qm }}"
            echo "[DEBUG] 手动触发 - 是否更新全部: $should_update_all; 是否编译: $should_compile"
          fi
          echo "has_ui_changes=$has_ui_changes" >> $GITHUB_OUTPUT
          echo "has_py_changes=$has_py_changes" >> $GITHUB_OUTPUT
          echo "has_ts_changes=$has_ts_changes" >> $GITHUB_OUTPUT
          echo "should_update_all=$should_update_all" >> $GITHUB_OUTPUT
          echo "should_compile=$should_compile" >> $GITHUB_OUTPUT
          {
            echo "## 文件变更"
            echo "| 文件类型 | 状态 |"
            echo "|----------|------|"
            echo "| .py | $has_py_changes |"
            echo "| .ui | $has_ui_changes |"
            echo "| .ts | $has_ts_changes |"
            echo "| 更新全部 | $should_update_all |"
            echo "| 是否编译 | $should_compile |"
          } >> $GITHUB_STEP_SUMMARY

  update-translations:
    name: 更新.ts文件
    runs-on: ubuntu-latest
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.has_ui_changes == 'true' ||
      needs.detect-changes.outputs.has_py_changes == 'true' ||
      needs.detect-changes.outputs.should_update_all == 'true'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Cache Qt Tools
        uses: actions/cache@v4
        id: cache-qt-tools
        with:
          path: |
            /usr/bin/lupdate
            /usr/bin/lrelease
            /usr/share/qt5/translations
          key: ${{ runner.os }}-i18n-qttools-${{ hashFiles('/etc/apt/sources.list*') }}
          restore-keys: |
            ${{ runner.os }}-i18n-qttools-
            ${{ runner.os }}-i18n-

      - name: Set up Qt-Tools
        if: steps.cache-qt-tools.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y qttools5-dev-tools

      - name: Update main .ts files
        if: needs.detect-changes.outputs.has_py_changes == 'true' || needs.detect-changes.outputs.should_update_all == 'true'
        shell: bash
        run: |
          echo "[DEBUG] 更新主程序翻译文件..."
          py_files=$(find . -name "*.py" -not -path "./build/*" -not -path "./dist/*" | tr '\n' ' ')
          if [ -n "$py_files" ]; then
            for ts_file in i18n/*.ts; do
              if [ -f "$ts_file" ]; then
                echo "[DEBUG] 更新 $ts_file"
                lupdate $py_files -ts "$ts_file"
              fi
            done
          fi

      - name: Update theme .ts files
        if: needs.detect-changes.outputs.has_ui_changes == 'true' || needs.detect-changes.outputs.should_update_all == 'true'
        shell: bash
        run: |
          for theme_dir in ui/*/; do
            if [ -d "$theme_dir" ]; then
              theme_name=$(basename "$theme_dir")
              echo "[DEBUG] 处理主题: $theme_name"
              ui_files=$(find "$theme_dir" -name "*.ui" | tr '\n' ' ')
              if [ -n "$ui_files" ]; then
                i18n_dir="${theme_dir}i18n"
                mkdir -p "$i18n_dir"
                ts_file="${i18n_dir}/zh_CN.ts"
                echo "[DEBUG] 更新 $ts_file"
                lupdate $ui_files -ts "$ts_file"
              else
                echo "[DEBUG] 主题 $theme_name 中未找到 UI 文件"
              fi
            fi
          done

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: |
            i18n: 更新翻译文件(.ts) (Auto-Commit)
            - 更新了.ts文件
            - 触发事件: ${{ github.event_name }}
            - 提交哈希: ${{ github.sha }}
            - 工作流运行: ${{ github.run_id }}

            *由 GitHub Actions 自动生成
          file_pattern: 'i18n/*.ts ui/*/i18n/*.ts'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: '41898282+github-actions[bot]@users.noreply.github.com'

  compile-translations:
    name: 编译.ts文件
    runs-on: ubuntu-latest
    needs: [detect-changes, update-translations]
    if: always() && needs.detect-changes.outputs.should_compile == 'true'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Cache Qt Tools
        uses: actions/cache@v4
        id: cache-qt-tools-compile
        with:
          path: |
            /usr/bin/lupdate
            /usr/bin/lrelease
            /usr/share/qt5/translations
          key: ${{ runner.os }}-i18n-qttools-${{ hashFiles('/etc/apt/sources.list*') }}
          restore-keys: |
            ${{ runner.os }}-i18n-qttools-
            ${{ runner.os }}-i18n-

      - name: Set up Qt-Tools
        if: steps.cache-qt-tools-compile.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y qttools5-dev-tools

      - name: Compile main .ts files
        shell: bash
        run: |
          for ts_file in i18n/*.ts; do
            if [ -f "$ts_file" ]; then
              qm_file="${ts_file%.ts}.qm"
              echo "[DEBUG] 编译: $(basename "$ts_file") -> $(basename "$qm_file")"
              lrelease "$ts_file" -qm "$qm_file"
            fi
          done

      - name: Compile theme .ui files
        shell: bash
        run: |
          for theme_dir in ui/*/; do
            if [ -d "$theme_dir" ]; then
              theme_name=$(basename "$theme_dir")
              i18n_dir="${theme_dir}i18n"
              if [ -d "$i18n_dir" ]; then
                echo "[DEBUG] 处理主题: $theme_name"
                for ts_file in "$i18n_dir"/*.ts; do
                  if [ -f "$ts_file" ]; then
                    qm_file="${ts_file%.ts}.qm"
                    echo "[DEBUG] 编译: $(basename "$ts_file") -> $(basename "$qm_file")"
                    lrelease "$ts_file" -qm "$qm_file"
                  fi
                done
              else
                echo "[DEBUG] 主题 $theme_name 没有翻译文件"
              fi
            fi
          done

      - name: Commit compiled files
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: |
            i18n: 编译.ts文件 (Auto-Commit)
            - 编译了.ts文件 (.ts -> .qm)
            - 触发事件: ${{ github.event_name }}
            - 提交哈希: ${{ github.sha }}
            - 工作流运行: ${{ github.run_id }}

            * 由 GitHub Actions 自动生成
          file_pattern: 'i18n/*.qm ui/*/i18n/*.qm'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: '41898282+github-actions[bot]@users.noreply.github.com'


  summary:
    name: Update Summary
    runs-on: ubuntu-latest
    needs: [detect-changes, update-translations, compile-translations]
    if: always()
    steps:
      - name: 生成执行总结
        shell: bash
        run: |
          {
            echo "### 执行状态"
            echo "| 任务 | 状态 |"
            echo "|------|------|"
            if [[ "${{ needs.detect-changes.result }}" == "success" ]]; then
              echo "| 检测变更 | 成功 |"
            else
              echo "| 检测变更 | 失败 |"
            fi
            if [[ "${{ needs.update-translations.result }}" == "success" ]]; then
              echo "| 更新翻译 | 成功 |"
            elif [[ "${{ needs.update-translations.result }}" == "failure" ]]; then
              echo "| 更新翻译 | 失败 |"
            elif [[ "${{ needs.update-translations.result }}" == "skipped" ]]; then
              echo "| 更新翻译 | 跳过 |"
            else
              echo "| 更新翻译 | 取消 |"
            fi
            if [[ "${{ needs.compile-translations.result }}" == "success" ]]; then
              echo "| 编译翻译 | 成功 |"
            elif [[ "${{ needs.compile-translations.result }}" == "failure" ]]; then
              echo "| 编译翻译 | 失败 |"
            elif [[ "${{ needs.compile-translations.result }}" == "skipped" ]]; then
              echo "| 编译翻译 | 跳过 |"
            else
              echo "| 编译翻译 | 取消 |"
            fi
            echo ""
            echo "### 触发信息"
            echo "- **触发事件**: ${{ github.event_name }}"
            echo "- **分支**: ${{ github.ref_name }}"
            echo "- **提交**: ${{ github.sha }}"
            echo "- **执行时间**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              echo "- **更新全部**: ${{ github.event.inputs.update_all_ts }}"
              echo "- **编译 QM**: ${{ github.event.inputs.compile_to_qm }}"
            fi
            echo ""
            echo "### 变更结果"
            echo "- **Python 文件变更**: ${{ needs.detect-changes.outputs.has_py_changes }}"
            echo "- **UI 文件变更**: ${{ needs.detect-changes.outputs.has_ui_changes }}"
            echo "- **翻译文件变更**: ${{ needs.detect-changes.outputs.has_ts_changes }}"
          } >> $GITHUB_STEP_SUMMARY
