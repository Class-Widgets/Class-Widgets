name: Cache Delete

on:
  pull_request_target:
    types: [closed]

  workflow_dispatch:
    inputs:
      delete_all:
        description: '删除全部缓存(覆盖其他选择)'
        required: false
        default: false
        type: boolean
      branch_name:
        description: '要删除缓存的分支名'
        required: false
        type: string
      max_delete_count:
        description: '最大删除条数(可选,默认全部)'
        required: false
        type: string
        default: ''

jobs:
  delete-cache:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete PR branch cache
      if: github.event_name == 'pull_request_target'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "[DEBUG] 删除分支 '${{ github.event.pull_request.head.ref }}' 的缓存"
        cache_list=$(gh cache list --json id,ref --repo ${{ github.repository }} | jq -r '.[] | select(.ref == "refs/heads/${{ github.event.pull_request.head.ref }}") | .id')
        if [ -z "$cache_list" ]; then
          echo "[DEBUG] 分支 '${{ github.event.pull_request.head.ref }}' 未找到缓存"
        else
          echo "::group::缓存ID"
          echo "[DEBUG] 找到的缓存ID:"
          echo "[DEBUG] $cache_list"
          echo "::endgroup::"
          for cache_id in $cache_list; do
            echo "[DEBUG] 正在删除缓存 ID: $cache_id"
            gh cache delete $cache_id --repo ${{ github.repository }}
            if [ $? -eq 0 ]; then
              echo "[DEBUG] 成功删除缓存: `$cache_id`"
            else
              echo "[DEBUG] 删除ID为 `$cache_id` 的缓存时失败"
            fi
          done
        fi

    - name: Delete all caches
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.delete_all == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh cache delete --all --succeed-on-no-caches --repo ${{ github.repository }}

    - name: Delete branch cache
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.delete_all == 'false' && github.event.inputs.branch_name != ''
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        BRANCH_NAME="${{ github.event.inputs.branch_name }}"
        MAX_COUNT="${{ github.event.inputs.max_delete_count }}"
        echo "::group::Delete branch cache '$BRANCH_NAME'"
        echo "[DEBUG] 删除分支 '$BRANCH_NAME' 的缓存"
        if [ -n "$MAX_COUNT" ] && [ "$MAX_COUNT" -gt 0 ]; then
          cache_list=$(gh cache list --json id,ref --repo ${{ github.repository }} | jq -r '.[] | select(.ref == "refs/heads/'$BRANCH_NAME'") | .id' | head -n $MAX_COUNT)
          echo "[DEBUG] 限制删除条数: $MAX_COUNT"
        else
          cache_list=$(gh cache list --json id,ref --repo ${{ github.repository }} | jq -r '.[] | select(.ref == "refs/heads/'$BRANCH_NAME'") | .id')
        fi
        if [ -z "$cache_list" ]; then
          echo "[DEBUG] 分支 '$BRANCH_NAME' 没有找到缓存"
        else
          echo "[DEBUG] 找到以下缓存ID:"
          echo "[DEBUG] $cache_list"
          echo "::endgroup::"
          count=0
          for cache_id in $cache_list; do
            count=$((count + 1))
            echo "[DEBUG] 正在删除缓存: $cache_id (第 $count 个)"
            gh cache delete $cache_id --repo ${{ github.repository }}
            if [ $? -eq 0 ]; then
              echo "[DEBUG] 成功删除缓存: $cache_id"
            else
              echo "[DEBUG] 删除ID为 $cache_id 的缓存时失败"
            fi
          done
          echo "[DEBUG] 共删除了 $count 个缓存"
        fi

    - name: No action specified
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.delete_all == 'false' && github.event.inputs.branch_name == ''
      run: |
        echo "[DEBUG] [WARNING] 未指定操作"
        echo "[DEBUG] 当前可用的缓存列表:"
        gh cache list --repo ${{ github.repository }} || echo "[DEBUG] 无法获取缓存列表"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
